-- Associativity, presidence, elimination of left recursion
Expr        ::= Expr1 ',' Expr
            | Expr1

Expr1       ::= Ident '=' Expr1 
            | Expr2

Expr2       ::= Expr3 '===' Expr3 
            | Expr3 '<' Expr3
            | Expr3

Expr3       ::= Expr4 Expr3opt

Expr3opt    ::= '+' Expr4 Expr3opt 
            | '-' Expr4 Expr3opt
            | e

Expr4       ::= ExprX Expr4opt

Expr4opt    ::= '*' ExprX Expr4opt 
            | '%' ExprX Expr4opt
            | e

ExprX       ::= Number
            | String
            | 'true'
            | 'false'
            | 'undefined' 
            | Ident
            | Ident '(' Exprs ')' 
            | '[' Exprs ']'
            | '[' ArrayFor ']'
            | '(' Expr ')'

Exprs       ::= e
            | Expr1 CommaExprs

CommaExprs  ::= e  
            | ',' Expr1 CommaExprs

ArrayFor    ::= 'for' '(' Ident 'of' Expr1 ')' ArrayCompr 
ArrayIf     ::= 'if' '(' Expr1 ')' ArrayCompr
ArrayCompr  ::= Expr1
            | ArrayFor 
            | ArrayIf

Ident       ::=
Number      ::=
String      ::=